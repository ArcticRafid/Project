{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafid\\\\OneDrive\\\\Desktop\\\\Project\\\\frontend\\\\src\\\\components\\\\Pages\\\\Register\\\\registerPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Input from '../../Input/input';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport classes from './registerPage.module.css';\nimport { getValue } from '@testing-library/user-event/dist/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const submit = async data => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.details,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(submit),\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          label: \"Name\",\n          ...register('name', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"employee\",\n          label: \"Employee ID\",\n          ...register('employee', {\n            required: true\n          }),\n          error: errors.employee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          label: \"Password\",\n          ...register('password', {\n            required: true\n          }),\n          error: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          label: \"Confirm Password\",\n          ...register('confirmPassword', {\n            required: true,\n            validat: value => value !== getValue('password') ? 'Passwords Do Not Match' : true\n          }),\n          error: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"tZnI34w6UJgPqNgNB5ftMv5eR0w=\", false, function () {\n  return [useForm];\n});\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","Input","useForm","Link","classes","getValue","jsxDEV","_jsxDEV","RegisterPage","_s","handleSubmit","register","formState","errors","submit","data","className","container","children","details","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","type","label","required","error","employee","password","validat","value","confirmPassword","_c","$RefreshReg$"],"sources":["C:/Users/rafid/OneDrive/Desktop/Project/frontend/src/components/Pages/Register/registerPage.js"],"sourcesContent":["import React from 'react'\r\nimport Input from '../../Input/input';\r\nimport {useForm} from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './registerPage.module.css';\r\nimport { getValue } from '@testing-library/user-event/dist/utils';\r\n\r\n\r\nexport default function RegisterPage() {\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    formState: {errors},\r\n} = useForm();\r\n\r\nconst submit = async data => {};\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.details}>\r\n        <h1>Register</h1>\r\n        <form onSubmit = {handleSubmit(submit)} noValidate>\r\n          <Input\r\n            type=\"text\" \r\n            label=\"Name\"{...register('name', {\r\n              required: true\r\n            })}\r\n          />\r\n\r\n          <Input\r\n            type=\"employee\" \r\n            label=\"Employee ID\"{...register('employee', {\r\n              required: true\r\n            })}\r\n            error = {errors.employee}\r\n          />\r\n\r\n          <Input\r\n            type=\"password\" \r\n            label=\"Password\"{...register('password', {\r\n              required: true\r\n            })}\r\n            error = {errors.password}\r\n          />\r\n\r\n          <Input\r\n            type=\"password\" \r\n            label=\"Confirm Password\"{...register('confirmPassword', {\r\n              required: true,\r\n              validat: value =>\r\n              value !== getValue('password')\r\n              ? 'Passwords Do Not Match'\r\n              : true,\r\n            })}\r\n            error = {errors.confirmPassword}\r\n          />\r\n\r\n          <button type=\"submit\">Register</button>\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}