{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafid\\\\OneDrive\\\\Desktop\\\\Project\\\\frontend\\\\src\\\\Hooks\\\\useCart.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport * as userService from '../Services/userService';\nimport { useAuth } from './useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(null);\nconst cart_key = 'cart';\nconst empty_cart = {\n  items: [],\n  totalPrice: 0,\n  totalcount: 0\n};\nexport default function Provider({\n  children\n}) {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [cartItems, setCartItems] = useState(empty_cart.items);\n  const [totalPrice, setTotalPrice] = useState(empty_cart.totalPrice);\n  const [totalCount, setTotalCount] = useState(empty_cart.totalCount);\n  useEffect(() => {\n    if (user) {\n      const initCart = getCartFromLocal();\n      setCartItems(initCart.items);\n      setTotalPrice(initCart.totalPrice);\n      setTotalCount(initCart.totalCount);\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      const totalPrice = sum(cartItems.map(item => item.price));\n      const totalCount = sum(cartItems.map(item => item.quantity));\n      setTotalPrice(totalPrice);\n      setTotalCount(totalCount);\n      localStorage.setItem(cart_key + user.id, JSON.stringify({\n        items: cartItems,\n        totalPrice,\n        totalCount\n      }));\n    }\n  }, [cartItems, user]);\n  function getCartFromLocal() {\n    const stored = localStorage.getItem(cart_key + user.id);\n    return stored ? JSON.parse(stored) : empty_cart;\n  }\n  const sum = items => {\n    return items.reduce((prev, cur) => prev + cur, 0);\n  };\n  const removeitem = foodId => {\n    const filteredcart = cartItems.filter(item => item.food.id !== foodId);\n    setCartItems(filteredcart);\n  };\n  const changequant = (cartItem, newquant) => {\n    const {\n      food\n    } = cartItem;\n    const changes = {\n      ...cartItem,\n      quantity: newquant,\n      price: food.price * newquant\n    };\n    const updatedItems = cartItems.map(item => item.food.id === cartItem.food.id ? changes : item);\n    setCartItems(updatedItems);\n  };\n  const addmore = food => {\n    const cartItem = cartItems.find(item => item.food.id === food.id);\n    if (cartItem) {\n      changequant(cartItem, cartItem.quantity + 1);\n    } else {\n      setCartItems([...cartItems, {\n        food,\n        quantity: 1,\n        price: food.price\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: {\n        items: cartItems,\n        totalPrice,\n        totalCount\n      },\n      removeitem,\n      changequant,\n      addmore\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(Provider, \"OB3oEX0AT7D4cu3KsJZ4LjeeHxM=\", false, function () {\n  return [useAuth];\n});\n_c = Provider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","userService","useAuth","jsxDEV","_jsxDEV","CartContext","cart_key","empty_cart","items","totalPrice","totalcount","Provider","children","_s","user","cartItems","setCartItems","setTotalPrice","totalCount","setTotalCount","initCart","getCartFromLocal","sum","map","item","price","quantity","localStorage","setItem","id","JSON","stringify","stored","getItem","parse","reduce","prev","cur","removeitem","foodId","filteredcart","filter","food","changequant","cartItem","newquant","changes","updatedItems","addmore","find","value","cart","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/rafid/OneDrive/Desktop/Project/frontend/src/Hooks/useCart.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport * as userService from '../Services/userService';\r\nimport { useAuth } from './useAuth';\r\n\r\nconst CartContext = createContext(null);\r\nconst cart_key = 'cart';\r\nconst empty_cart = {\r\n    items: [],\r\n    totalPrice: 0,\r\n    totalcount: 0,\r\n};\r\n\r\nexport default function Provider({ children }) {\r\n    const { user } = useAuth();\r\n    const [cartItems, setCartItems] = useState(empty_cart.items);\r\n    const [totalPrice, setTotalPrice] = useState(empty_cart.totalPrice);\r\n    const [totalCount, setTotalCount] = useState(empty_cart.totalCount);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            const initCart = getCartFromLocal();\r\n            setCartItems(initCart.items);\r\n            setTotalPrice(initCart.totalPrice);\r\n            setTotalCount(initCart.totalCount);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            const totalPrice = sum(cartItems.map(item => item.price));\r\n            const totalCount = sum(cartItems.map(item => item.quantity));\r\n            setTotalPrice(totalPrice);\r\n            setTotalCount(totalCount);\r\n\r\n            localStorage.setItem(cart_key + user.id, JSON.stringify({\r\n                items: cartItems,\r\n                totalPrice,\r\n                totalCount,\r\n            }));\r\n        }\r\n    }, [cartItems, user]);\r\n\r\n    function getCartFromLocal() {\r\n        const stored = localStorage.getItem(cart_key + user.id);\r\n        return stored ? JSON.parse(stored) : empty_cart;\r\n    }\r\n\r\n    const sum = items => {\r\n        return items.reduce((prev, cur) => prev + cur, 0);\r\n    };\r\n\r\n    const removeitem = foodId => {\r\n        const filteredcart = cartItems.filter(item => item.food.id !== foodId);\r\n        setCartItems(filteredcart);\r\n    };\r\n\r\n    const changequant = (cartItem, newquant) => {\r\n        const { food } = cartItem;\r\n\r\n        const changes = {\r\n            ...cartItem,\r\n            quantity: newquant,\r\n            price: food.price * newquant,\r\n        };\r\n        const updatedItems = cartItems.map(item => (item.food.id === cartItem.food.id ? changes : item));\r\n\r\n        setCartItems(updatedItems);\r\n    };\r\n\r\n    const addmore = food => {\r\n        const cartItem = cartItems.find(item => item.food.id === food.id);\r\n        if (cartItem) {\r\n            changequant(cartItem, cartItem.quantity + 1);\r\n        } else {\r\n            setCartItems([...cartItems, { food, quantity: 1, price: food.price }]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={{ cart: { items: cartItems, totalPrice, totalCount }, removeitem, changequant, addmore }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}